"""Create canvas_surveys, student_feedback, and feedback_responses tables

Revision ID: b73924c2efd1
Revises: b641cb18408b
Create Date: 2025-10-02 15:02:40.630202

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'b73924c2efd1'
down_revision: Union[str, Sequence[str], None] = 'b641cb18408b'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('canvas_surveys',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('course_id', sa.Integer(), nullable=False),
    sa.Column('canvas_quiz_id', sa.Integer(), nullable=False, comment='Maps to Canvas Quiz.id'),
    sa.Column('title', sa.String(length=500), nullable=False, comment='Canvas Quiz.title'),
    sa.Column('description', sa.Text(), nullable=True, comment='Canvas Quiz.description'),
    sa.Column('quiz_type', sa.String(length=50), nullable=True, comment="Canvas Quiz.quiz_type: 'practice_quiz', 'assignment', 'graded_survey', 'survey'"),
    sa.Column('points_possible', sa.Integer(), nullable=True, comment='Canvas Quiz.points_possible'),
    sa.Column('question_count', sa.Integer(), nullable=True, comment='Canvas Quiz.question_count'),
    sa.Column('published', sa.Boolean(), nullable=True, comment='Canvas Quiz.published'),
    sa.Column('anonymous_submissions', sa.Boolean(), nullable=True, comment='Canvas Quiz.anonymous_submissions'),
    sa.Column('due_at', sa.TIMESTAMP(timezone=True), nullable=True, comment='Canvas Quiz.due_at'),
    sa.Column('lock_at', sa.TIMESTAMP(timezone=True), nullable=True, comment='Canvas Quiz.lock_at'),
    sa.Column('unlock_at', sa.TIMESTAMP(timezone=True), nullable=True, comment='Canvas Quiz.unlock_at'),
    sa.Column('response_count', sa.Integer(), nullable=True, comment='Count of student submissions (our calculation)'),
    sa.Column('identification_confidence', sa.DECIMAL(precision=3, scale=2), nullable=True, comment='Confidence score (0.00-1.00) that this quiz is a feedback survey (our algorithm)'),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('last_synced', sa.TIMESTAMP(timezone=True), nullable=True, comment='Last time we synced from Canvas API'),
    sa.ForeignKeyConstraint(['course_id'], ['courses.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_canvas_surveys_canvas_quiz_id', 'canvas_surveys', ['canvas_quiz_id'], unique=False)
    op.create_index('idx_canvas_surveys_confidence', 'canvas_surveys', ['identification_confidence'], unique=False)
    op.create_index('idx_canvas_surveys_course_id', 'canvas_surveys', ['course_id'], unique=False)
    op.create_index('idx_canvas_surveys_last_synced', 'canvas_surveys', ['last_synced'], unique=False)
    op.create_index('idx_canvas_surveys_published', 'canvas_surveys', ['published'], unique=False)
    op.create_index('uq_canvas_surveys_course_quiz', 'canvas_surveys', ['course_id', 'canvas_quiz_id'], unique=True)
    op.create_table('student_feedback',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('canvas_survey_id', sa.UUID(), nullable=False),
    sa.Column('course_id', sa.Integer(), nullable=False, comment='Denormalized for query performance'),
    sa.Column('canvas_submission_id', sa.Integer(), nullable=False, comment='Maps to Canvas QuizSubmission.id'),
    sa.Column('student_canvas_id', sa.Integer(), nullable=True, comment='Maps to Canvas QuizSubmission.user_id (NULL for anonymous)'),
    sa.Column('started_at', sa.TIMESTAMP(timezone=True), nullable=True, comment='Canvas QuizSubmission.started_at'),
    sa.Column('finished_at', sa.TIMESTAMP(timezone=True), nullable=True, comment='Canvas QuizSubmission.finished_at'),
    sa.Column('attempt', sa.Integer(), nullable=True, comment='Canvas QuizSubmission.attempt'),
    sa.Column('score', sa.DECIMAL(precision=10, scale=2), nullable=True, comment='Canvas QuizSubmission.score'),
    sa.Column('kept_score', sa.DECIMAL(precision=10, scale=2), nullable=True, comment='Canvas QuizSubmission.kept_score (final recorded score)'),
    sa.Column('fudge_points', sa.DECIMAL(precision=10, scale=2), nullable=True, comment='Canvas QuizSubmission.fudge_points (manual adjustment)'),
    sa.Column('workflow_state', sa.String(length=50), nullable=True, comment="Canvas QuizSubmission.workflow_state: 'untaken', 'pending_review', 'complete', 'settings_only', 'preview'"),
    sa.Column('raw_response_data', postgresql.JSONB(astext_type=sa.Text()), nullable=False, comment='Full Canvas QuizSubmission JSON response (audit trail)'),
    sa.Column('processed_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=True, comment='When we processed this submission (our tracking)'),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['canvas_survey_id'], ['canvas_surveys.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['course_id'], ['courses.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_student_feedback_course_id', 'student_feedback', ['course_id'], unique=False)
    op.create_index('idx_student_feedback_finished_at', 'student_feedback', ['finished_at'], unique=False)
    op.create_index('idx_student_feedback_student_id', 'student_feedback', ['student_canvas_id'], unique=False)
    op.create_index('idx_student_feedback_survey_id', 'student_feedback', ['canvas_survey_id'], unique=False)
    op.create_index('idx_student_feedback_workflow_state', 'student_feedback', ['workflow_state'], unique=False)
    op.create_index('uq_student_feedback_submission', 'student_feedback', ['canvas_survey_id', 'canvas_submission_id'], unique=True)
    op.create_table('feedback_responses',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('student_feedback_id', sa.UUID(), nullable=False),
    sa.Column('canvas_question_id', sa.Integer(), nullable=False, comment='Maps to Canvas QuizQuestion.id'),
    sa.Column('question_name', sa.String(length=255), nullable=True, comment='Canvas QuizQuestion.question_name'),
    sa.Column('question_text', sa.Text(), nullable=False, comment='Canvas QuizQuestion.question_text'),
    sa.Column('question_type', sa.String(length=50), nullable=True, comment="Canvas QuizQuestion.question_type:\n        'essay_question', 'multiple_choice_question', 'multiple_answers_question',\n        'true_false_question', 'short_answer_question', 'numerical_question',\n        'matching_question', 'fill_in_multiple_blanks_question', 'text_only_question'"),
    sa.Column('points_possible', sa.Integer(), nullable=True, comment='Canvas QuizQuestion.points_possible'),
    sa.Column('response_text', sa.Text(), nullable=True, comment='For essay/short answer questions'),
    sa.Column('response_numeric', sa.DECIMAL(precision=10, scale=2), nullable=True, comment='For numerical questions and ratings'),
    sa.Column('selected_answer_text', sa.String(length=500), nullable=True, comment='For multiple choice/true-false questions'),
    sa.Column('selected_answer_id', sa.Integer(), nullable=True, comment='Canvas answer ID for multiple choice'),
    sa.Column('question_category', sa.String(length=100), nullable=True, comment="Our categorization: 'course_content', 'instructor', 'technical',\n        'overall_satisfaction', 'assessment', 'interaction', 'other'"),
    sa.Column('sentiment_score', sa.DECIMAL(precision=3, scale=2), nullable=True, comment='AI sentiment analysis score (-1.00 to 1.00, future enhancement)'),
    sa.Column('contains_improvement_suggestion', sa.Boolean(), nullable=True, comment='Our analysis: Does this response suggest an improvement?'),
    sa.Column('is_critical_issue', sa.Boolean(), nullable=True, comment='Our analysis: Is this a critical/urgent issue?'),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['student_feedback_id'], ['student_feedback.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_feedback_responses_category', 'feedback_responses', ['question_category'], unique=False)
    op.create_index('idx_feedback_responses_critical', 'feedback_responses', ['is_critical_issue'], unique=False)
    op.create_index('idx_feedback_responses_improvement', 'feedback_responses', ['contains_improvement_suggestion'], unique=False)
    op.create_index('idx_feedback_responses_question_type', 'feedback_responses', ['question_type'], unique=False)
    op.create_index('idx_feedback_responses_student_feedback_id', 'feedback_responses', ['student_feedback_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('idx_feedback_responses_student_feedback_id', table_name='feedback_responses')
    op.drop_index('idx_feedback_responses_question_type', table_name='feedback_responses')
    op.drop_index('idx_feedback_responses_improvement', table_name='feedback_responses')
    op.drop_index('idx_feedback_responses_critical', table_name='feedback_responses')
    op.drop_index('idx_feedback_responses_category', table_name='feedback_responses')
    op.drop_table('feedback_responses')
    op.drop_index('uq_student_feedback_submission', table_name='student_feedback')
    op.drop_index('idx_student_feedback_workflow_state', table_name='student_feedback')
    op.drop_index('idx_student_feedback_survey_id', table_name='student_feedback')
    op.drop_index('idx_student_feedback_student_id', table_name='student_feedback')
    op.drop_index('idx_student_feedback_finished_at', table_name='student_feedback')
    op.drop_index('idx_student_feedback_course_id', table_name='student_feedback')
    op.drop_table('student_feedback')
    op.drop_index('uq_canvas_surveys_course_quiz', table_name='canvas_surveys')
    op.drop_index('idx_canvas_surveys_published', table_name='canvas_surveys')
    op.drop_index('idx_canvas_surveys_last_synced', table_name='canvas_surveys')
    op.drop_index('idx_canvas_surveys_course_id', table_name='canvas_surveys')
    op.drop_index('idx_canvas_surveys_confidence', table_name='canvas_surveys')
    op.drop_index('idx_canvas_surveys_canvas_quiz_id', table_name='canvas_surveys')
    op.drop_table('canvas_surveys')
    # ### end Alembic commands ###
